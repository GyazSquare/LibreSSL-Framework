// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		D7B1D71F1BBAB8B500EE962A /* LibreSSL.h in Headers */ = {isa = PBXBuildFile; fileRef = D7B1D71E1BBAB8B500EE962A /* LibreSSL.h */; settings = {ATTRIBUTES = (Public, ); }; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		D701D7F52180A3B60074DBEF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = D7B1D7121BBAB8B500EE962A /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D701D7F12180A33F0074DBEF;
			remoteInfo = libressl;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		D732D8091BC49F5C007B455C /* module.modulemap */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = "sourcecode.module-map"; path = module.modulemap; sourceTree = "<group>"; };
		D7B1D71B1BBAB8B500EE962A /* LibreSSL.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = LibreSSL.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		D7B1D71E1BBAB8B500EE962A /* LibreSSL.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = LibreSSL.h; sourceTree = "<group>"; };
		D7B1D7201BBAB8B500EE962A /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		D7B1D7171BBAB8B500EE962A /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		D7B1D7111BBAB8B500EE962A = {
			isa = PBXGroup;
			children = (
				D7B1D71D1BBAB8B500EE962A /* LibreSSL */,
				D7B1D71C1BBAB8B500EE962A /* Products */,
			);
			sourceTree = "<group>";
		};
		D7B1D71C1BBAB8B500EE962A /* Products */ = {
			isa = PBXGroup;
			children = (
				D7B1D71B1BBAB8B500EE962A /* LibreSSL.framework */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		D7B1D71D1BBAB8B500EE962A /* LibreSSL */ = {
			isa = PBXGroup;
			children = (
				D7B1D71E1BBAB8B500EE962A /* LibreSSL.h */,
				D7B1D7201BBAB8B500EE962A /* Info.plist */,
				D732D8091BC49F5C007B455C /* module.modulemap */,
			);
			path = LibreSSL;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXHeadersBuildPhase section */
		D7B1D7181BBAB8B500EE962A /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D7B1D71F1BBAB8B500EE962A /* LibreSSL.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXHeadersBuildPhase section */

/* Begin PBXLegacyTarget section */
		D701D7F12180A33F0074DBEF /* libressl */ = {
			isa = PBXLegacyTarget;
			buildArgumentsString = "-f Makefile-osx $(ACTION)";
			buildConfigurationList = D701D7F42180A33F0074DBEF /* Build configuration list for PBXLegacyTarget "libressl" */;
			buildPhases = (
			);
			buildToolPath = /usr/bin/make;
			buildWorkingDirectory = "";
			dependencies = (
			);
			name = libressl;
			passBuildSettingsInEnvironment = 1;
			productName = libressl;
		};
/* End PBXLegacyTarget section */

/* Begin PBXNativeTarget section */
		D7B1D71A1BBAB8B500EE962A /* LibreSSL */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = D7B1D7231BBAB8B500EE962A /* Build configuration list for PBXNativeTarget "LibreSSL" */;
			buildPhases = (
				D74EF8331E3780810051633E /* Change Install names */,
				D76394961BF8AD3E00F7CF55 /* Create Custom Structure */,
				D7B1D7161BBAB8B500EE962A /* Sources */,
				D7B1D7171BBAB8B500EE962A /* Frameworks */,
				D7B1D7181BBAB8B500EE962A /* Headers */,
				D765113D1BBE96E1004D9EEF /* Install LibreSSL Headers */,
				D74EF8311E377FC30051633E /* Install LibreSSL Libraries */,
				D74EF8321E3780280051633E /* Install openssl commands */,
				D7AB1FA01EBD7D3D0092A654 /* Install openssl manual pages */,
				D7B1D7191BBAB8B500EE962A /* Resources */,
				D765113A1BBE8F31004D9EEF /* Copy & Open Target Build Directory */,
			);
			buildRules = (
			);
			dependencies = (
				D701D7F62180A3B60074DBEF /* PBXTargetDependency */,
			);
			name = LibreSSL;
			productName = LibreSSL;
			productReference = D7B1D71B1BBAB8B500EE962A /* LibreSSL.framework */;
			productType = "com.apple.product-type.framework";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		D7B1D7121BBAB8B500EE962A /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 1000;
				ORGANIZATIONNAME = "GyazSquare Inc.";
				TargetAttributes = {
					D701D7F12180A33F0074DBEF = {
						CreatedOnToolsVersion = 10.0;
						ProvisioningStyle = Automatic;
					};
					D7B1D71A1BBAB8B500EE962A = {
						CreatedOnToolsVersion = 7.0.1;
					};
				};
			};
			buildConfigurationList = D7B1D7151BBAB8B500EE962A /* Build configuration list for PBXProject "LibreSSL-OSX" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = D7B1D7111BBAB8B500EE962A;
			productRefGroup = D7B1D71C1BBAB8B500EE962A /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				D701D7F12180A33F0074DBEF /* libressl */,
				D7B1D71A1BBAB8B500EE962A /* LibreSSL */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		D7B1D7191BBAB8B500EE962A /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		D74EF8311E377FC30051633E /* Install LibreSSL Libraries */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Install LibreSSL Libraries";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -ev\n\n# Copy the LibreSSL libraries\ncp -R \"${LIBRESSL_LIB_DIR}\"/lib*.dylib \"${TARGET_BUILD_DIR}/${LIBRARIES_FOLDER_PATH}\"\n";
		};
		D74EF8321E3780280051633E /* Install openssl commands */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Install openssl commands";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -ev\n\n# Copy the openssl command\ncp -R \"${LIBRESSL_BIN_DIR}/openssl\" \"${TARGET_BUILD_DIR}/${SUPPORT_FOLDER_PATH}\"\n\n# Copy the ocspcheck command\ncp -R \"${LIBRESSL_BIN_DIR}/ocspcheck\" \"${TARGET_BUILD_DIR}/${SUPPORT_FOLDER_PATH}\"\n\n# Copy the nc command\ncp -R \"${LIBRESSL_BIN_DIR}/nc\" \"${TARGET_BUILD_DIR}/${SUPPORT_FOLDER_PATH}\"\n";
		};
		D74EF8331E3780810051633E /* Change Install names */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Change Install names";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -ev\n\nLIBCRYPTO_FILENAME=$(basename `readlink \"${LIBRESSL_LIB_DIR}/libcrypto.dylib\"`)\nLIBCRYPTO_FILE=\"${LIBRESSL_LIB_DIR}/${LIBCRYPTO_FILENAME}\"\nLIBCRYPTO_OLD_NAME=\"${LIBCRYPTO_FILE}\"\nLIBCRYPTO_NEW_NAME=\"@rpath/${LIBRARIES_FOLDER_PATH}/${LIBCRYPTO_FILENAME}\"\n\nLIBSSL_FILENAME=$(basename `readlink \"${LIBRESSL_LIB_DIR}/libssl.dylib\"`)\nLIBSSL_FILE=\"${LIBRESSL_LIB_DIR}/${LIBSSL_FILENAME}\"\nLIBSSL_OLD_NAME=\"${LIBSSL_FILE}\"\nLIBSSL_NEW_NAME=\"@rpath/${LIBRARIES_FOLDER_PATH}/${LIBSSL_FILENAME}\"\nLIBSSL_RPATH=\"@loader_path/../../../..\"\n\nLIBTLS_FILENAME=$(basename `readlink \"${LIBRESSL_LIB_DIR}/libtls.dylib\"`)\nLIBTLS_FILE=\"${LIBRESSL_LIB_DIR}/${LIBTLS_FILENAME}\"\nLIBTLS_OLD_NAME=\"${LIBTLS_FILE}\"\nLIBTLS_NEW_NAME=\"@rpath/${LIBRARIES_FOLDER_PATH}/${LIBTLS_FILENAME}\"\nLIBTLS_RPATH=\"@loader_path/../../../..\"\n\nOPENSSL_FILE=\"${LIBRESSL_BIN_DIR}/openssl\"\nOPENSSL_RPATH=\"@loader_path/../../../..\"\n\nOCSPCHECK_FILE=\"${LIBRESSL_BIN_DIR}/ocspcheck\"\nOCSPCHECK_RPATH=\"@loader_path/../../../..\"\n\nNC_FILE=\"${LIBRESSL_BIN_DIR}/nc\"\nNC_RPATH=\"@loader_path/../../../..\"\n\n# Change the name in libcrypto\ninstall_name_tool -id \"${LIBCRYPTO_NEW_NAME}\" \"${LIBCRYPTO_FILE}\"\n\n# Change the name, dependent library names, and add the rpath in libssl\ninstall_name_tool -change \"${LIBCRYPTO_OLD_NAME}\" \"${LIBCRYPTO_NEW_NAME}\" -id \"${LIBSSL_NEW_NAME}\" -add_rpath \"${LIBSSL_RPATH}\" \"${LIBSSL_FILE}\"\n\n# Change the name, dependent library names and add the rpath in libtls\ninstall_name_tool -change \"${LIBCRYPTO_OLD_NAME}\" \"${LIBCRYPTO_NEW_NAME}\" -change \"${LIBSSL_OLD_NAME}\" \"${LIBSSL_NEW_NAME}\" -id \"${LIBTLS_NEW_NAME}\" -add_rpath \"${LIBTLS_RPATH}\" \"${LIBTLS_FILE}\"\n\n# Change dependent library names and add the rpath in openssl\ninstall_name_tool -change \"${LIBCRYPTO_OLD_NAME}\" \"${LIBCRYPTO_NEW_NAME}\" -change \"${LIBSSL_OLD_NAME}\" \"${LIBSSL_NEW_NAME}\" -add_rpath \"${OPENSSL_RPATH}\" \"${OPENSSL_FILE}\"\n\n# Change dependent library names and add the rpath in ocspcheck\ninstall_name_tool -change \"${LIBCRYPTO_OLD_NAME}\" \"${LIBCRYPTO_NEW_NAME}\" -change \"${LIBSSL_OLD_NAME}\" \"${LIBSSL_NEW_NAME}\" -change \"${LIBTLS_OLD_NAME}\" \"${LIBTLS_NEW_NAME}\" -add_rpath \"${OCSPCHECK_RPATH}\" \"${OCSPCHECK_FILE}\"\n\n# Change dependent library names and add the rpath in nc\ninstall_name_tool -change \"${LIBCRYPTO_OLD_NAME}\" \"${LIBCRYPTO_NEW_NAME}\" -change \"${LIBSSL_OLD_NAME}\" \"${LIBSSL_NEW_NAME}\" -change \"${LIBTLS_OLD_NAME}\" \"${LIBTLS_NEW_NAME}\" -add_rpath \"${NC_RPATH}\" \"${NC_FILE}\"\n";
		};
		D76394961BF8AD3E00F7CF55 /* Create Custom Structure */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Create Custom Structure";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -ev\n\n# Create the Support directory\n/bin/mkdir -p \"${TARGET_BUILD_DIR}/${SUPPORT_FOLDER_PATH}\"\n/bin/ln -sfh \"Versions/Current/${SUPPORT_FOLDER_NAME}\" \"${TARGET_BUILD_DIR}/${WRAPPER_NAME}/${SUPPORT_FOLDER_NAME}\"\n\n# Create the Libraries directory\n/bin/mkdir -p \"${TARGET_BUILD_DIR}/${LIBRARIES_FOLDER_PATH}\"\n\n# Create the Documentation directory\n/bin/mkdir -p \"${TARGET_BUILD_DIR}/${DOCUMENTATION_FOLDER_PATH}\"\n\n";
		};
		D765113A1BBE8F31004D9EEF /* Copy & Open Target Build Directory */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 8;
			files = (
			);
			inputPaths = (
			);
			name = "Copy & Open Target Build Directory";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 1;
			shellPath = /bin/sh;
			shellScript = "set -ev\n\necho \"${TARGET_BUILD_DIR}\" | pbcopy\nopen \"${TARGET_BUILD_DIR}\"\n";
		};
		D765113D1BBE96E1004D9EEF /* Install LibreSSL Headers */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Install LibreSSL Headers";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -ev\n\n# Copy the LibreSSL headers\ncp -R \"${LIBRESSL_INCLUDE_DIR}\"/* \"${TARGET_BUILD_DIR}/${PUBLIC_HEADERS_FOLDER_PATH}\"\n\n# Modify the include directives\nfind \"${TARGET_BUILD_DIR}/${PUBLIC_HEADERS_FOLDER_PATH}\" \\( -name \"*.h\" -and ! -name \"${UMBRELLA_HEADER}\" \\) -print0 | xargs -0 sed -e 's/\\(#[[:blank:]]*include[[:blank:]]*<\\)\\(openssl\\/\\)/\\1LibreSSL\\/\\2/g' -i \"\"\n";
		};
		D7AB1FA01EBD7D3D0092A654 /* Install openssl manual pages */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Install openssl manual pages";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -ev\n\n# Copy the man directory\ncp -R \"${LIBRESSL_MAN_DIR}\" \"${TARGET_BUILD_DIR}/${DOCUMENTATION_FOLDER_PATH}\"\n";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		D7B1D7161BBAB8B500EE962A /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		D701D7F62180A3B60074DBEF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D701D7F12180A33F0074DBEF /* libressl */;
			targetProxy = D701D7F52180A3B60074DBEF /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		D701D7F22180A33F0074DBEF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CODE_SIGN_STYLE = Automatic;
				DEBUGGING_SYMBOLS = YES;
				DEBUG_INFORMATION_FORMAT = dwarf;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				OTHER_CFLAGS = "";
				OTHER_LDFLAGS = "";
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Debug;
		};
		D701D7F32180A33F0074DBEF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CODE_SIGN_STYLE = Automatic;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				GCC_C_LANGUAGE_STANDARD = gnu11;
				MTL_FAST_MATH = YES;
				OTHER_CFLAGS = "";
				OTHER_LDFLAGS = "";
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Release;
		};
		D7B1D7211BBAB8B500EE962A /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				CURRENT_PROJECT_VERSION = 1;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				LIBRESSL_BIN_DIR = "${LIBRESSL_INSTALL_DIR}/bin";
				LIBRESSL_BUILD_DIR = "${CONFIGURATION_TEMP_DIR}/${LIBRESSL_PACKAGE_NAME}.build";
				LIBRESSL_FRAMEWORK_VERSION = 3.5.1;
				LIBRESSL_INCLUDE_DIR = "${LIBRESSL_INSTALL_DIR}/include";
				LIBRESSL_INSTALL_DIR = "${CONFIGURATION_TEMP_DIR}/${LIBRESSL_PACKAGE_NAME}.install";
				LIBRESSL_LIB_DIR = "${LIBRESSL_INSTALL_DIR}/lib";
				LIBRESSL_MAN_DIR = "${LIBRESSL_SHARE_DIR}/man";
				LIBRESSL_PACKAGE_DIR = "${SRCROOT}/${LIBRESSL_PACKAGE_NAME}";
				LIBRESSL_PACKAGE_NAME = "libressl-${LIBRESSL_PACKAGE_VERSION}";
				LIBRESSL_PACKAGE_VERSION = 2.8.2;
				LIBRESSL_SHARE_DIR = "${LIBRESSL_INSTALL_DIR}/share";
				MACOSX_DEPLOYMENT_TARGET = 10.6;
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Debug;
		};
		D7B1D7221BBAB8B500EE962A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				CURRENT_PROJECT_VERSION = 1;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				LIBRESSL_BIN_DIR = "${LIBRESSL_INSTALL_DIR}/bin";
				LIBRESSL_BUILD_DIR = "${CONFIGURATION_TEMP_DIR}/${LIBRESSL_PACKAGE_NAME}.build";
				LIBRESSL_FRAMEWORK_VERSION = 3.5.1;
				LIBRESSL_INCLUDE_DIR = "${LIBRESSL_INSTALL_DIR}/include";
				LIBRESSL_INSTALL_DIR = "${CONFIGURATION_TEMP_DIR}/${LIBRESSL_PACKAGE_NAME}.install";
				LIBRESSL_LIB_DIR = "${LIBRESSL_INSTALL_DIR}/lib";
				LIBRESSL_MAN_DIR = "${LIBRESSL_SHARE_DIR}/man";
				LIBRESSL_PACKAGE_DIR = "${SRCROOT}/${LIBRESSL_PACKAGE_NAME}";
				LIBRESSL_PACKAGE_NAME = "libressl-${LIBRESSL_PACKAGE_VERSION}";
				LIBRESSL_PACKAGE_VERSION = 2.8.2;
				LIBRESSL_SHARE_DIR = "${LIBRESSL_INSTALL_DIR}/share";
				MACOSX_DEPLOYMENT_TARGET = 10.6;
				MTL_ENABLE_DEBUG_INFO = NO;
				SDKROOT = macosx;
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Release;
		};
		D7B1D7241BBAB8B500EE962A /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				DEFINES_MODULE = YES;
				DOCUMENTATION_FOLDER_NAME = Documentation;
				DOCUMENTATION_FOLDER_PATH = "${CONTENTS_FOLDER_PATH}/Resources/${DOCUMENTATION_FOLDER_NAME}";
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				FRAMEWORK_VERSION = A;
				INFOPLIST_FILE = LibreSSL/Info.plist;
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/../Frameworks @loader_path/Frameworks";
				LIBRARIES_FOLDER_NAME = Libraries;
				LIBRARIES_FOLDER_PATH = "${CONTENTS_FOLDER_PATH}/${LIBRARIES_FOLDER_NAME}";
				LIBRARY_SEARCH_PATHS = "$(LIBRESSL_LIB_DIR)";
				MODULEMAP_FILE = LibreSSL/module.modulemap;
				OTHER_LDFLAGS = (
					"-lcrypto",
					"-lssl",
					"-ltls",
					"-all_load",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.gyazsquare.LibreSSL;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SKIP_INSTALL = YES;
				SUPPORT_FOLDER_NAME = Support;
				SUPPORT_FOLDER_PATH = "${CONTENTS_FOLDER_PATH}/${SUPPORT_FOLDER_NAME}";
				UMBRELLA_HEADER = "${PRODUCT_NAME}.h";
			};
			name = Debug;
		};
		D7B1D7251BBAB8B500EE962A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				DEFINES_MODULE = YES;
				DOCUMENTATION_FOLDER_NAME = Documentation;
				DOCUMENTATION_FOLDER_PATH = "${CONTENTS_FOLDER_PATH}/Resources/${DOCUMENTATION_FOLDER_NAME}";
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				FRAMEWORK_VERSION = A;
				INFOPLIST_FILE = LibreSSL/Info.plist;
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/../Frameworks @loader_path/Frameworks";
				LIBRARIES_FOLDER_NAME = Libraries;
				LIBRARIES_FOLDER_PATH = "${CONTENTS_FOLDER_PATH}/${LIBRARIES_FOLDER_NAME}";
				LIBRARY_SEARCH_PATHS = "$(LIBRESSL_LIB_DIR)";
				MODULEMAP_FILE = LibreSSL/module.modulemap;
				OTHER_LDFLAGS = (
					"-lcrypto",
					"-lssl",
					"-ltls",
					"-all_load",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.gyazsquare.LibreSSL;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SKIP_INSTALL = YES;
				SUPPORT_FOLDER_NAME = Support;
				SUPPORT_FOLDER_PATH = "${CONTENTS_FOLDER_PATH}/${SUPPORT_FOLDER_NAME}";
				UMBRELLA_HEADER = "${PRODUCT_NAME}.h";
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		D701D7F42180A33F0074DBEF /* Build configuration list for PBXLegacyTarget "libressl" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D701D7F22180A33F0074DBEF /* Debug */,
				D701D7F32180A33F0074DBEF /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		D7B1D7151BBAB8B500EE962A /* Build configuration list for PBXProject "LibreSSL-OSX" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D7B1D7211BBAB8B500EE962A /* Debug */,
				D7B1D7221BBAB8B500EE962A /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		D7B1D7231BBAB8B500EE962A /* Build configuration list for PBXNativeTarget "LibreSSL" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D7B1D7241BBAB8B500EE962A /* Debug */,
				D7B1D7251BBAB8B500EE962A /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = D7B1D7121BBAB8B500EE962A /* Project object */;
}
